{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { Geolocation, GeolocationPosition, PermissionStatus } from '@capacitor/geolocation';\nexport const useLocationStore = defineStore('location', {\n  state: () => {\n    return {\n      permission: \"\",\n      location: null\n    };\n  },\n  getters: {\n    isPermitted: state => state.permission != \"denied\" ? true : false\n  },\n  actions: {\n    async initLocation() {\n      // await checkLocationPermission();\n\n      if (navigator.geolocation) {\n        await navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      const x = location.value;\n      const array = {\n        \"coords\": {\n          \"latitude\": x.coords.latitude,\n          \"longitude\": x.coords.longitude\n        }\n      };\n      location.value = array;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","Geolocation","GeolocationPosition","PermissionStatus","useLocationStore","state","permission","location","getters","isPermitted","actions","initLocation","navigator","geolocation","getCurrentPosition","successCallback","errorCallback","console","log","x","value","array","coords","latitude","longitude"],"sources":["C:/Users/USER/Desktop/home/src/stores/location.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport {  Geolocation, GeolocationPosition, PermissionStatus  } from '@capacitor/geolocation';\r\n\r\nexport const useLocationStore = defineStore('location', {\r\n    state: () => {\r\n        return {\r\n            permission: \"\",\r\n            location: null,\r\n        }\r\n    },\r\n    getters: {\r\n        isPermitted: (state) => (state.permission != \"denied\" ? true : false),\r\n    },\r\n    actions: {\r\n        async initLocation() {\r\n            // await checkLocationPermission();\r\n\r\n            if (navigator.geolocation) {\r\n                await navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\r\n            } else {\r\n                console.log(\"Geolocation is not supported by this browser.\");\r\n            }\r\n\r\n            const x = location.value;\r\n            const array = {\"coords\": {\"latitude\": x.coords.latitude, \"longitude\": x.coords.longitude}}\r\n            location.value = array;\r\n\r\n\r\n        },\r\n        \r\n    }\r\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAAUC,WAAW,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAS,wBAAwB;AAE7F,OAAO,MAAMC,gBAAgB,GAAGJ,WAAW,CAAC,UAAU,EAAE;EACpDK,KAAK,EAAEA,CAAA,KAAM;IACT,OAAO;MACHC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,WAAW,EAAGJ,KAAK,IAAMA,KAAK,CAACC,UAAU,IAAI,QAAQ,GAAG,IAAI,GAAG;EACnE,CAAC;EACDI,OAAO,EAAE;IACL,MAAMC,YAAYA,CAAA,EAAG;MACjB;;MAEA,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvB,MAAMD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,eAAe,EAAEC,aAAa,CAAC;MAClF,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAChE;MAEA,MAAMC,CAAC,GAAGZ,QAAQ,CAACa,KAAK;MACxB,MAAMC,KAAK,GAAG;QAAC,QAAQ,EAAE;UAAC,UAAU,EAAEF,CAAC,CAACG,MAAM,CAACC,QAAQ;UAAE,WAAW,EAAEJ,CAAC,CAACG,MAAM,CAACE;QAAS;MAAC,CAAC;MAC1FjB,QAAQ,CAACa,KAAK,GAAGC,KAAK;IAG1B;EAEJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}